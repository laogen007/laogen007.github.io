<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>对windows操作系统文件的初步了解</title>
      <link href="/2019/04/01/Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA%E5%92%8C%E5%88%A9%E7%94%A8Python%E8%84%9A%E6%9C%AC%E5%AF%B9%E5%8E%8B%E7%BC%A9%E5%8C%85CRC32%E6%A0%A1%E9%AA%8C%E7%A0%81%E7%9A%84%E7%A0%B4%E8%A7%A3%20(1)/"/>
      <url>/2019/04/01/Python%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA%E5%92%8C%E5%88%A9%E7%94%A8Python%E8%84%9A%E6%9C%AC%E5%AF%B9%E5%8E%8B%E7%BC%A9%E5%8C%85CRC32%E6%A0%A1%E9%AA%8C%E7%A0%81%E7%9A%84%E7%A0%B4%E8%A7%A3%20(1)/</url>
      
        <content type="html"><![CDATA[<h1 id="Python环境的搭建和利用Python脚本对压缩包CRC32校验码碰撞的破解"><a href="#Python环境的搭建和利用Python脚本对压缩包CRC32校验码碰撞的破解" class="headerlink" title="Python环境的搭建和利用Python脚本对压缩包CRC32校验码碰撞的破解"></a>Python环境的搭建和利用Python脚本对压缩包CRC32校验码碰撞的破解</h1><p>我是遇到了一个以crc32校验码破解压缩包的题，需要用python环境运行crc32校验码碰撞的脚本，所以尝试着去搭建了python环境。这里将其搭建的过程和解这道题的步骤一并献上。</p><h2 id="Python环境的搭建"><a href="#Python环境的搭建" class="headerlink" title="Python环境的搭建"></a>Python环境的搭建</h2><p>首先进入python官网    <a href="https://www.python.org/downloads" target="_blank" rel="noopener">https://www.python.org/downloads</a>    ，点击下载。<img src="https://github.com/laogen007/photos/blob/master/four1.png" alt="在这里插入图片描述"><br> 下载完后我们双击打开安装，这里注意勾选上第二个    <strong>Add    python    3.7    to    PATH</strong>    。<br>点击        <strong>Install    Now</strong>        开始安装。<br><img src="https://github.com/laogen007/photos/blob/master/four2.png" alt="在这里插入图片描述"><br>等待几秒钟就ok啦。</p><p>  查看是否搭建完成<br> 打开cmd，输入python回车，会看到你安装的版本信息，就说明你已经配置完成。</p><p><img src="https://github.com/laogen007/photos/blob/master/four3.png" alt="在这里插入图片描述"></p><h2 id="crc32校验码压缩包的破解"><a href="#crc32校验码压缩包的破解" class="headerlink" title="crc32校验码压缩包的破解"></a>crc32校验码压缩包的破解</h2><p>开始你需要搭建好python的环境，此时你已经做到。那么现在需要的就是<strong>crc的碰撞脚本</strong>，这里把链接给大家，去下载就可以啦。<br>             <a href="https://github.com/theonlypwner/crc32" target="_blank" rel="noopener">https://github.com/theonlypwner/crc32</a><br> 注：<br>         可以自己存个文件夹，里边专门放一些脚本文件。<br>         可能有些人不知道什么是脚本，这里你只需要知道他的作用就是crc碰撞，至于为什么不需要考虑，可以自己去学习。就像你会玩游戏，但这个游戏你一定能写的出来是一个道理。<br>         <img src="https://github.com/laogen007/photos/blob/master/four4.png" alt="在这里插入图片描述"></p><p> 现在把这道题（也就是这个加密的压缩包放这里）<a href="https://pan.baidu.com/s/1VNbS-uz-zvDRq5VCO0Ms5g" target="_blank" rel="noopener">https://pan.baidu.com/s/1VNbS-uz-zvDRq5VCO0Ms5g</a>    。<br> 首先我们打开压缩包，会发现里边有四个文本文档。找到其对应的CRC32密文。<br><img src="https://github.com/laogen007/photos/blob/master/four5.png" alt="在这里插入图片描述"></p><p>  启动我们的脚本将其校验码输入进行碰撞。</p><h3 id="脚本启动及碰撞的具体操作"><a href="#脚本启动及碰撞的具体操作" class="headerlink" title="脚本启动及碰撞的具体操作"></a>脚本启动及碰撞的具体操作</h3><p>  打开cmd，进入到脚本的文档下<br><img src="https://github.com/laogen007/photos/blob/master/four6.png" alt="在这里插入图片描述"><br>  输入命令<br>                <strong>python crc32.py reverse   0x（你的32密文）</strong>，一个一个进行碰撞。<br>                注：不要忘了在密文前还有一个    <strong>0x</strong>    。<br>                我们依次输入刚才三个加密文本文档（这里可以忽略掉blog文档）的crc32密文。<br><img src="https://github.com/laogen007/photos/blob/master/four7.png" alt="在这里插入图片描述"><br><img src="https://github.com/laogen007/photos/blob/master/four8.png" alt="在这里插入图片描述"></p><p>  这里我们可以发现一些端倪，就是他的碰撞出来的一些东西竟然可以组成一句话，前两个已经证实。是：    you_are_the_    。<br>                   那我们就来继续尝试第三个文档的crc32密文，看看有没有我们想要的结果。</p><p><img src="https://github.com/laogen007/photos/blob/master/four9.png" alt="在这里插入图片描述"><br>                你会发现，里边的东西好无头绪。这里要给大家补充一下。<br>                我们用编辑器打开我们的脚本，里边有一传字符（包括英文字母的大小写和数字及一个特殊符号“_”）。那么第三个文档碰撞的结果没有我们想要的，会不会就是我们需要的碰撞结果，这些碰撞的字符不够用呢？<br>                <img src="https://github.com/laogen007/photos/blob/master/fou10.png" alt="在这里插入图片描述"><br>                <img src="https://github.com/laogen007/photos/blob/master/four11.png" alt="在这里插入图片描述"><br>                我们试着加一些特殊的字符进去看看会不会出现不一样的结果。<br>                <img src="https://github.com/laogen007/photos/blob/master/four12.png" alt="在这里插入图片描述"><br>                我添加了数字键盘1-0上的所有字符（这里注意是英文的特殊字符，不是中文的）。Ctrl+S保存，我们再来测试一下第三个文档的crc32密文。<img src="https://github.com/laogen007/photos/blob/master/four13.png" alt="在这里插入图片描述"><br>                我们发现了best!!。连起来就是        you_are_the_best!!        。（注：感叹号也是英文字符）<br>                那我们来看看这是不是blog文档的密码吧<img src="https://github.com/laogen007/photos/blob/master/four14.png" alt="在这里插入图片描述"><br>                <img src="https://github.com/laogen007/photos/blob/master/four15.png" alt="在这里插入图片描述"><br>                恭喜我们打开了这个文档，但新的问题又出现了哈哈哈哈。不要着急，我们一步一步的来。</p><h3 id="密码的破解"><a href="#密码的破解" class="headerlink" title="密码的破解"></a>密码的破解</h3><ul><li>观察密码，我们发现他是一种以“==”结尾的，这让我们想到了base编码，想到就去尝试去看看解出来的是什么玩意！！</li><li><img src="https://github.com/laogen007/photos/blob/master/four16.png" alt="在这里插入图片描述"></li></ul><p>这里我们看到了flag，相信很多人已经很激动了，但会发现里边有一些    %+数字字母    的一些特殊的组成，说是乱码吧又好像很有规律（%+数字字母），不懂去百度啊，看看百度怎么说。直接搜索    %7B    也就是里边我们感觉是乱码的东西。<br><img src="https://github.com/laogen007/photos/blob/master/four17.png" alt="在这里插入图片描述"></p><p>很高兴，你又认识了一个新的编码，url编码，我们对应url编码把这句话写出来吧。<br>                    这里给他家一个url的编码表        <a href="https://blog.csdn.net/sinat_34439107/article/details/78242584" target="_blank" rel="noopener">https://blog.csdn.net/sinat_34439107/article/details/78242584</a><br>                    对照url编码表我们就可以写出来啦<br>                                            欢迎来到沙漏安全<br>                    这里注意：是we1com （是数字1，全是坑哈哈哈哈哈）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>弹唱：我有钱你爱我吧</title>
      <link href="/2019/03/18/%E5%90%89%E4%BB%96%E6%80%8E%E5%8F%8A%E5%A5%B9%EF%BC%9F/"/>
      <url>/2019/03/18/%E5%90%89%E4%BB%96%E6%80%8E%E5%8F%8A%E5%A5%B9%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="个人弹唱了一手《我有钱你爱我吧》，但其实我没钱她也爱我，哈哈哈哈。"><a href="#个人弹唱了一手《我有钱你爱我吧》，但其实我没钱她也爱我，哈哈哈哈。" class="headerlink" title="个人弹唱了一手《我有钱你爱我吧》，但其实我没钱她也爱我，哈哈哈哈。"></a>个人弹唱了一手《我有钱你爱我吧》，但其实我没钱她也爱我，哈哈哈哈。</h2><iframe height="450" width="600" src="https://v.youku.com/v_show/id_XNDEwMTg2MDg2NA==.html" frameborder="0" allowfullscreen></iframe>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇个人博客</title>
      <link href="/2019/03/18/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/03/18/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<ol><li>List item</li></ol><p>大家好，我是刘老根，他们都叫我渣男。初来github，他们也都叫我小白。不知道将来能走多远，但这里就是起点，从这里出发或许在将来的某一天，能让你们记住一个名字“老根”</p><ol start="2"><li>List item</li></ol><p>当然刘老根不是我的真实名字，但是不是真名又有何关系呢？名字只不过是一个代号罢了。</p><ol start="3"><li>List item</li></ol><p>第一篇博客不谈技术，先认识一下我吧<img src="https://github.com/laogen007/photos/blob/master/tow1.jpg?raw=true" alt="在这里插入图片描述"><br>哈哈，这是被人偷拍的，但是偷拍才是能真正显示出我的容貌的。（真心有点丑。。。。）</p><ol start="4"><li>List item</li></ol><p>之后我会更新一些学习上的笔记或者自己的感想，收藏我的微博吧     laogen007.github.io</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/03/16/hello-world/"/>
      <url>/2019/03/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
